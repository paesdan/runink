#!/bin/bash
# runi compile — compile a folder of DSLs, generate .envs, and scaffold Go

SRC_DIR=$1
if [ -z "$SRC_DIR" ]; then
  echo "Usage: runi-compile <path-to-dsl-folder>"
  exit 1
fi

echo "[runi compile] 📂 Scanning folder: $SRC_DIR"

for dsl in $(find "$SRC_DIR" -name '*.dsl'); do
  BASENAME=$(basename "$dsl" .dsl)
  DIRNAME=$(dirname "$dsl")
  ENV_FILE="${DIRNAME}/${BASENAME}.env"
  GEN_MAIN="rendered/${BASENAME}_main.go"

  mkdir -p rendered
  mkdir -p "$DIRNAME"

  echo "# Auto-generated from $dsl" > "$ENV_FILE"

  # Extract sinks
  grep '@sink' "$dsl" | \
    sed -n 's/.*@sink("sf:\/\/\([^"]*\)".*/\1/p' | \
    sed 's/\./_/g' | \
    awk '{ printf "CDM_%s=sf://%s\n", toupper($0), $0 }' >> "$ENV_FILE"

  # Extract sources
  grep '@source' "$dsl" | \
    sed -n 's/.*@source("kafka:\/\/\([^"]*\)".*/\1/p' | \
    sed 's/\./_/g' | \
    awk '{ printf "CDM_SOURCE_%s=kafka://%s\n", toupper($0), $0 }' >> "$ENV_FILE"

  # Extract emits
  grep '@emits' "$dsl" | \
    sed -n 's/.*@emits("alerts.\([^"]*\)").*/\1/p' | \
    sed 's/\./_/g' | \
    awk '{ printf "CDM_EMIT_%s=alerts.%s\n", toupper($0), $0 }' >> "$ENV_FILE"

  echo "[runi compile] ✅ .env generated: $ENV_FILE"

  # Scaffold main Go file using env vars
  cat > "$GEN_MAIN" <<EOF
// Code generated by runi compile. DO NOT EDIT.
package main

import (
	"fmt"
	"os"
)

func main() {
	fmt.Println("🔐 Environment for: $BASENAME.dsl")
	envVars := []string{
		"CDM_TEMP_SINK",
		"CDM_DLQ_SINK",
		"CDM_FINAL_SINK",
		"CDM_SOURCE_TOPICS_TRADE_EVENTS",
		"CDM_EMIT_TRADE_FDC3_TAGS",
	}
	for _, k := range envVars {
		fmt.Printf("  %s = %s\n", k, os.Getenv(k))
	}
}
EOF

  echo "[runi compile] ✅ DAG Go scaffold written: $GEN_MAIN"
  echo "🪪 To inject secrets:"
  echo "   runi secrets inject --herd finance --from-file $ENV_FILE"
  echo ""
done
echo "[runi compile] ✅ All DSLs compiled and Go files generated."
echo "[runi compile] ✅ All done!"